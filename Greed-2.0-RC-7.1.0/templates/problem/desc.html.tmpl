<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <title>TopCoder ${Contest.Name} - ${Problem.Score}: ${Problem.Name}</title>
    ${if Options.favIcon}
    <link type="image/x-icon" rel="shortcut icon" href="${Options.favIcon}"/>
    ${end}

    ${if !Options.noDefaultStyle}
    <style type="text/css">
        ${Dependencies.problem-desc-styles.Output}
        ${Options.theme;seq(format(Dependencies.problem-desc-theme-%s.Output), reify)}
    </style>
    ${end}
    
    ${if Options.customStyle}
    <link href="${Options.customStyle}" rel="stylesheet" type="text/css" />
    ${end}

</head>

<body>
    <h1 class="heading">
        <span id='contest-name'>${Contest.Name}</span>
        ${if Contest.Div}<span id='contest-division'>${Contest.Div}</span>${end}
        <span id='problem-score'>${Problem.Score}</span>
        <span id='problem-name'>${Problem.Name}</span>
    </h1>

    <hr />

    <!-- Problem Statement -->
    <div class="section">
        <h2 class="section-title">Problem Statement</h2>
        <div class="problem-intro">
            ${Problem.Description.Intro}
        </div>
    </div>
    
    <!-- Problem definition -->
    ${if Options.showDefinition}
    <div class="section" id="definition">
        <h2 class="section-title">Definition</h2>
        <div class="problem-definition">
            <ul class="problem-definition-lines">
                <li class="definition-line" id='class-line'>
                    <span class='definition-name'>Class</span>
                    <span class='definition-value'>${Problem.Name}</span>
                </li>
                <li class="definition-line" id='method-line'>
                    <span class='definition-name'>Method</span>
                    <span class='definition-value'>${Method.Name}</span>
                </li>
                <li class="definition-line" id='parameters-line'>
                    <span class='definition-name'>Parameters</span>
                    <span class='definition-value'>
                    ${foreach Method.Params p , }
                        ${p.Type;seq(html($Options.showDefinition))}
                    ${end}
                    </span>
                </li>
                <li class="definition-line" id='returns-line'>
                    <span class='definition-name'>Returns</span>
                    <span class='definition-value'>
                        ${Method.ReturnType;seq(html($Options.showDefinition))}
                    </span>
                </li>
                <li class="definition-line" id='signature-line'>
                    <span class='definition-name'>Method signature</span>
                    <span class='definition-value'>
                        ${Method;seq(html($Options.showDefinition))}
                    </span>
                </li>
            </ul>
            <div class="problem-definition-public-tip">(be sure your method is public)</div>
        </div>        
    </div>
    ${end}

    <!-- Limits -->
    <div class="section">
        <h2 class="section-title">Limits</h2>
        <div class='problem-limits'>
            <ul class="limit-lines">
                <li class='limit-line'>
                    <span class='limit-name'>Time limit (s)</span>
                    <span class='limit-value'>${Problem.TimeLimitSeconds;format(%.3f)}</span>
                </li>
                <li class='limit-line'>
                    <span class='limit-name'>Memory limit (MB)</span>
                    <span class='limit-value'>${Problem.MemoryLimitMB}</span>
                </li>
            </ul>
        </div>
    </div>

    ${if Problem.Description.HasNotes}
    <!-- Notes -->
    <div class="section">
        <h2 class="section-title">Notes</h2>
        <ul class="notes">
        ${foreach Problem.Description.Notes note}
            <li>${note}</li>
        ${end}
        </ul>
    </div>
    ${end}
    
    <!-- Constraints -->
    <div class="section">
        <h2 class="section-title">Constraints</h2>
        <ul class="constraints">
        ${foreach Problem.Description.Constraints cons}
            <li>${cons}</li>
        ${end}
        </ul>
    </div>

    <!-- Test cases -->
    <div class="section">
        <h2 class="section-title">Test cases</h2>
        <ol class="testcases" start='0'>
            ${foreach Examples e}
            <li class="testcase">
                <div class="testcase-content">
                    <div class="testcase-input">
                        <div class='tag'>input</div>
                        <ul class="variables">
                        ${foreach e.Input in}
                            <li class="variable data">
                                <span class="name data">${in.Param.Name}</span>
                                <span class="value data">
                                ${if Options.gridArrays}
                                    ${in;html(grid)}
                                ${else}
                                    ${in;html}
                                ${end}
                                </span>
                            </li>
                        ${end}
                        </ul>
                    </div>
                    <div class="testcase-output">
                        <div class='tag'>output</div>
                        <span class="prefix data">Returns</span>
                        <span class="value data">
                        ${if Options.gridArrays}
                            ${e.Output;html(grid)}
                        ${else}
                            ${e.Output;html}
                        ${end}
                        </span>
                    </div>
                    ${if e.Annotation}
                    <div class="testcase-annotation">
                        <div class='tag'>note</div>
                        <div class="testcase-comment">${e.Annotation}</div>
                    </div>
                    ${end}
               
                </div>
            </li>
            ${end}
        </ol>
    </div>
    <hr />

    This problem statement is the exclusive and proprietary property of TopCoder, Inc. Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited. (c)2003, TopCoder, Inc. All rights reserved.
</body>
</html>
